class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        //better solution given by Deepak
        int n = strs.size();
        sort(strs.begin(),strs.end());
        string str1 = strs[0];
        string str2 = strs[n-1];

        string ans;
        int sz = min(str1.size(),str2.size());
        for(int i=0;i<sz;i++)
        {
            if(str1[i] == str2[i])
            ans+=str1[i];
            else
            return ans;
        }
        return ans;

        // string ans;
        // for(int i=0;;i++)
        // {
        //     if(strs[0][i] == '\0')
        //     return ans;
        //     for(int j=0;j<strs.size()-1;j++)
        //     {
        //         if(strs[j][i] != strs[j+1][i])
        //         return ans;
        //     }
        //     ans+=strs[0][i];
        // }
        // return ans;



        //In this method we are finding the smallest length of string in vector which is useless
        // string ans;
        // int sz = INT_MAX;
        // int n = strs.size();
        // for(int i=0;i<n;i++)
        // {
        //     int temp = strs[i].size();
        //     sz = min(sz,temp);
        // }
        // for(int i=0;i<sz;i++)
        // {
        //     for(int j = 0;j<n-1;j++)
        //     {
        //         if(strs[j][i] != strs[j+1][i])
        //         return ans;
        //     }
        //     ans+=strs[0][i];
        // }
        // return ans;
    }
};
